plugins {
	id 'java'
}

dependencies {
	// Include all JAR-libraries from lib folder
	compile fileTree(dir: 'lib', include: ['*.jar'])
}

jar {
	destinationDir = file('target') // Put JAR into target folder

	// Package libraries into JAR
	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}
	exclude('META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA')
	baseName 'runnableclient'
	manifest {
		attributes 'Main-Class': 'sc.player2018.SC18ClientMain'
	}
	from sourceSets.main.output
}

task trainerJar(type: Jar, dependsOn: jar) {
	destinationDir = file('target') // Put JAR into target folder
	// Package libraries into JAR
	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}
	exclude('META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA')
	baseName 'trainer'
	manifest {
		attributes 'Main-Class': 'com.fwcd.sc18.trainer.TrainerMain'
	}
	from sourceSets.main.output
}

artifacts {
	archives trainerJar
}